  year = fields.Char(required=True, default=lambda self: fields.Date.today().year)
    quarter = fields.Selection([
        ('1', '1st'),
        ('2', '2nd'),
        ('3', '3rd'),
        ('4', '4th'),
    ], required=True, default=lambda self: str(date_utils.get_quarter_number(fields.Date.today())))
    quarter_start = fields.Date(compute='_compute_dates')
    quarter_end = fields.Date(compute='_compute_dates')





@api.depends('year', 'quarter')
    def _compute_dates(self):
        for dmfa in self:
            year = int(dmfa.year)
            month = int(dmfa.quarter) * 3
            self.quarter_start, self.quarter_end = date_utils.get_quarter(date(year, month, 1))

      note:
            the date function here is used to make int data to date data
            the year and quarter in parameters are just fields
            year is char and quarter is selection  field

access_radical_school_radical_school,radical_school.radical_school,model_radical_school_radical_school,base.group_user,1,1,1,1
access_teacher_teacher,teacher_teacher.radical_school,model_teacher_teacher,base.group_user,1,1,1,1
access_class_ten,class_ten,model_class_ten,base.group_user,1,1,1,1
access_class_ten_wizard,class_ten_wizard,model_class_ten_wizard,base.group_user,1,1,1,1
access_duplicate_admission_form,duplicate.admission.form,model_duplicate_admission_form,base.group_user,1,1,1,1
access_duplicate_admission_form_line,duplicate.admission.form line,model_duplicate_admission_form_line,base.group_user,1,1,1,1
access_school_classes,school_classes,model_school_classes,base.group_user,1,1,1,1
access_class_students,class_students,model_class_students,base.group_user,1,1,1,1
access_class_students_line,class_students_line,model_class_students_line,base.group_user,1,1,1,1